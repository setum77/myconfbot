#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
current_dir = Path(__file__).parent
project_root = current_dir.parent
sys.path.insert(0, str(project_root))

from src.myconfbot.utils.database import DatabaseManager
from src.myconfbot.config import Config

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üéÇ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        config = Config.load()
        db_manager = DatabaseManager(config)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        db_manager.init_db()
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print(f"üìä Database URL: {config.db.url}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –ø—Ä–∏–º–µ—Ä–æ–º"""
    env_file = project_root / '.env'
    if not env_file.exists():
        with open(env_file, 'w', encoding='utf-8') as f:
            f.write("# Telegram Bot Configuration\n")
            f.write("TELEGRAM_BOT_TOKEN=your_bot_token_here\n\n")
            f.write("# Admin Configuration\n")
            f.write("ADMIN_IDS=123456789\n\n")
            f.write("# Database Configuration\n")
            f.write("USE_POSTGRES=true\n")
            f.write("DB_HOST=localhost\n")
            f.write("DB_PORT=5432\n")
            f.write("DB_NAME=confectioner_bot\n")
            f.write("DB_USER=postgres\n")
            f.write("DB_PASSWORD=your_password_here\n")
            f.write("# –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DATABASE_URL –Ω–∞–ø—Ä—è–º—É—é:\n")
            f.write("# DATABASE_URL=postgresql://user:password@host:port/dbname\n\n")
            f.write("# Logging\n")
            f.write("LOG_LEVEL=INFO\n")
        
        print("üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.example - –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    parser.add_argument('--create-env', action='store_true', help="–°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª")
    
    args = parser.parse_args()
    
    if args.create_env:
        create_env_file()
    else:
        init_database()