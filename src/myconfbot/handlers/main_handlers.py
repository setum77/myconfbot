from telebot import types
import sqlite3
from datetime import datetime
import logging
from src.myconfbot.models import Customer, OrderStatus, CustomerCharacteristic, Admin
from src.myconfbot.utils.database import db_manager
from src.myconfbot.config import Config

def register_main_handlers(bot):

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_states = {}
    
    def is_user_admin(telegram_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config = Config.load()
            if telegram_id in config.admin_ids:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤ –±–∞–∑–µ
                admin = db_manager.get_admin_by_telegram_id(telegram_id)
                if not admin:
                    # –ï—Å–ª–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ, –Ω–æ –µ—Å—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ - –¥–æ–±–∞–≤–ª—è–µ–º
                    return None  # –í–µ—Ä–Ω–µ–º None —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
                return True
            return False
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
            return False
    
    @bot.message_handler(commands=['start', 'help'])   
    def handle_start(message):
        user_id = message.from_user.id
        chat_id = message.chat.id
        first_name = message.from_user.first_name
        username = message.from_user.username
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            admin_check = is_user_admin(user_id)
            
            if admin_check is None:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –Ω–æ –Ω–µ—Ç –≤ –±–∞–∑–µ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –∞–¥–º–∏–Ω–∞
                try:
                    admin = db_manager.add_admin(
                        telegram_id=user_id,
                        first_name=first_name,
                        username=username
                    )
                    bot.send_message(
                        chat_id, 
                        f"üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {first_name}!\n"
                        f"–í–∞—à–∏ –ø—Ä–∞–≤–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã. –î–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç."
                    )
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    show_admin_menu(chat_id)
                    return
                except Exception as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
                    bot.send_message(chat_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            
            elif admin_check:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                bot.send_message(
                    chat_id, 
                    f"üëë –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {first_name}!\n"
                    f"–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ."
                )
                show_admin_menu(chat_id)
                return
            
            # –ï—Å–ª–∏ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç–∞
            customer = db_manager.get_customer_by_telegram_id(user_id)
            
            if customer:
                # –ö–ª–∏–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
                bot.send_message(chat_id, f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {customer.first_name}! üéÇ\n–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å!")
                show_customer_menu(chat_id)
            else:
                # –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
                bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –±–æ—Ç –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π. –î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!")
                bot.send_message(chat_id, "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
                user_states[user_id] = 'awaiting_name'
                
        except Exception as e:
            bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start: {e}")
    
    def show_admin_menu(chat_id):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        btn2 = types.KeyboardButton('üì¶ –ó–∞–∫–∞–∑—ã')
        btn3 = types.KeyboardButton('üë• –ö–ª–∏–µ–Ω—Ç—ã')
        btn4 = types.KeyboardButton('üè™ –í –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞')
        markup.add(btn1, btn2, btn3, btn4)
        
        admin_text = "üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        bot.send_message(chat_id, admin_text, reply_markup=markup)
    
    def show_customer_menu(chat_id):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞"""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üéÇ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
        btn2 = types.KeyboardButton('üìñ –†–µ—Ü–µ–ø—Ç—ã')
        btn3 = types.KeyboardButton('üíº –£—Å–ª—É–≥–∏')
        btn4 = types.KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
        markup.add(btn1, btn2, btn3, btn4)
        
        welcome_text = "üéÇ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        bot.send_message(chat_id, welcome_text, reply_markup=markup)
    
    @bot.message_handler(func=lambda message: message.text == 'üè™ –í –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞')
    def switch_to_customer_menu(message):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        show_customer_menu(message.chat.id)
    
    @bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == 'awaiting_name')
    def handle_name_input(message):
        user_id = message.from_user.id
        chat_id = message.chat.id
        name = message.text.strip()
        username = message.from_user.username
        
        if len(name) < 2:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).")
            return
        
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É
            db_manager.add_customer(
                telegram_id=user_id,
                first_name=name,
                username=username
            )
            
            # –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
            user_states.pop(user_id, None)
            
            bot.send_message(chat_id, f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}! üòä\n–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞–º –ø–æ –∏–º–µ–Ω–∏.")
            show_customer_menu(chat_id)
            
        except Exception as e:
            bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: {e}")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    @bot.message_handler(func=lambda message: message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    def handle_admin_stats(message):
        if not is_user_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        bot.send_message(message.chat.id, "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    
    @bot.message_handler(func=lambda message: message.text == 'üì¶ –ó–∞–∫–∞–∑—ã')
    def handle_admin_orders(message):
        if not is_user_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
        bot.send_message(message.chat.id, "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    
    @bot.message_handler(func=lambda message: message.text == 'üë• –ö–ª–∏–µ–Ω—Ç—ã')
    def handle_admin_customers(message):
        if not is_user_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏
        bot.send_message(message.chat.id, "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    
    # –°—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
    @bot.message_handler(commands=['start2'])
    def send_welcome(message):
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        
        
        welcome_text = """
        üéÇ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫—É—é –º–∞—Å—Ç–µ—Ä—Å–∫—É—é!

        –Ø –ø–æ–º–æ–≥—É –≤–∞–º:
        ‚Ä¢ üìã –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ —Ç–æ—Ä—Ç–æ–≤ –∏ –¥–µ—Å–µ—Ä—Ç–æ–≤
        ‚Ä¢ üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã
        ‚Ä¢ üíº –£–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö
        ‚Ä¢ üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞—Å—Ç–µ—Ä–æ–º

        –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá
        """
        
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üéÇ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
        btn2 = types.KeyboardButton('üìñ –†–µ—Ü–µ–ø—Ç—ã')
        btn3 = types.KeyboardButton('üíº –£—Å–ª—É–≥–∏')
        btn4 = types.KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
        markup.add(btn1, btn2, btn3, btn4)
        
        bot.send_message(message.chat.id, welcome_text, reply_markup=markup)
    
    @bot.message_handler(func=lambda message: message.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    def send_contacts(message):
        contacts_text = """
        üìç –ù–∞—à –∞–¥—Ä–µ—Å: —É–ª. –ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è, 15
        üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67
        üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 9:00 - 21:00
        üìß Email: master@myconfbot.ru
        
        –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –∑–∞–∫–∞–∑–∞–º! üéÇ
        """
        bot.send_message(message.chat.id, contacts_text)
    
    @bot.message_handler(func=lambda message: message.text == 'üíº –£—Å–ª—É–≥–∏')
    def send_services(message):
        services_text = """
        üéÅ –ù–∞—à–∏ —É—Å–ª—É–≥–∏:

        ‚Ä¢ üéÇ –¢–æ—Ä—Ç—ã –Ω–∞ –∑–∞–∫–∞–∑
        ‚Ä¢ üßÅ –ö–∞–ø–∫–µ–π–∫–∏ –∏ –º–∞—Ñ—Ñ–∏–Ω—ã
        ‚Ä¢ üç™ –ü—Ä—è–Ω–∏—á–Ω—ã–µ –¥–æ–º–∏–∫–∏
        ‚Ä¢ üç´ –®–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫–æ–Ω—Ñ–µ—Ç—ã —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        ‚Ä¢ üéâ –î–µ—Å–µ—Ä—Ç—ã –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        ‚Ä¢ üë®‚Äçüç≥ –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–º—É –∏—Å–∫—É—Å—Å—Ç–≤—É

        –î–ª—è –∑–∞–∫–∞–∑–∞ –≤—ã–±–µ—Ä–∏—Ç–µ "üéÇ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑"
        """
        bot.send_message(message.chat.id, services_text)
    
    @bot.message_handler(commands=['menu'])
    def show_menu(message):
        bot.reply_to(message, "üéÇ –ù–∞—à–µ –º–µ–Ω—é –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    
    @bot.message_handler(commands=['myid'])
    def show_my_id(message):
        user_id = message.from_user.id
        first_name = message.from_user.first_name
        username = f"@{message.from_user.username}" if message.from_user.username else "–Ω–µ—Ç"
        
        bot.send_message(
            message.chat.id,
            f"üë§ –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
            f"üÜî ID: `{user_id}`\n"
            f"üìõ –ò–º—è: {first_name}\n"
            f"üì± Username: {username}\n\n"
            f"–°–æ–æ–±—â–∏—Ç–µ —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—ã.",
            parse_mode='Markdown'
        )