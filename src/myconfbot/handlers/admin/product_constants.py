# product_constants.py
from telebot import types

class ProductConstants:
    """–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π"""
    
    # –ü—É—Ç–∏
    PHOTOS_DIR = "data/products/"
    
    # –°–æ–æ–±—â–µ–Ω–∏—è
    PRODUCT_MANAGEMENT_TITLE = "üéÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    ADD_PRODUCT_START = "üéÇ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>\n\nüìù –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> —Ç–æ–≤–∞—Ä–∞:"
    ADD_CATEGORY_START = "üìÅ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b>\n\nüìù –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:"
    
    # –ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
    MEASUREMENT_UNITS = ['—à—Ç', '–∫–≥', '–≥', '–≥—Ä–∞–º–º', '–ª', '–º–ª', '—É–ø', '–ø–∞—á–∫–∞', '—É–ø–∞–∫–æ–≤–∫–∞', '–Ω–∞–±–æ—Ä', '–∫–æ–º–ø–ª–µ–∫—Ç']
    
    # –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã
    PREPAYMENT_OPTIONS = ["50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞", "100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞", "–ü–æ—Å—Ç–æ–ø–ª–∞—Ç–∞"]

    @staticmethod
    def create_management_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π"""
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        
        keyboard.add(
            types.InlineKeyboardButton("üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏", callback_data="category_manage"),
            types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="product_add")
        )
        
        
        keyboard.add(
            types.InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫-—Ç—å —Ç–æ–≤–∞—Ä", callback_data="product_edit"),
            types.InlineKeyboardButton("üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å", callback_data="product_view")
        )
        keyboard.add(
            types.InlineKeyboardButton("üö´ –£–¥–∞–ª–∏—Ç—å", callback_data="product_delete"),
            types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        )
        
        return keyboard

    @staticmethod
    def create_cancel_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard
    
    @staticmethod
    def create_skip_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å–∫–∞"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard

    @staticmethod
    def create_yes_no_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚úÖ –î–∞"))
        keyboard.add(types.KeyboardButton("‚ùå –ù–µ—Ç"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard

    @staticmethod
    def create_availability_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚úÖ –î–∞"))
        keyboard.add(types.KeyboardButton("‚ùå –ù–µ—Ç"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard

    @staticmethod
    def create_measurement_units_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        unit_buttons = [types.KeyboardButton(unit) for unit in ProductConstants.MEASUREMENT_UNITS]
        for i in range(0, len(unit_buttons), 3):
            row_buttons = unit_buttons[i:i+3]
            keyboard.add(*row_buttons)
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard

    @staticmethod
    def create_prepayment_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–ª–∞—Ç—ã"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for option in ProductConstants.PREPAYMENT_OPTIONS:
            keyboard.add(types.KeyboardButton(option))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard

    @staticmethod
    def create_confirmation_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"))
        keyboard.add(types.KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
        return keyboard
    
    @staticmethod
    def create_photo_question_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –æ —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ"))
        keyboard.add(types.KeyboardButton("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard
    
    @staticmethod
    def create_photos_done_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton("‚úÖ –ì–æ—Ç–æ–≤–æ"))
        keyboard.add(types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        return keyboard
    