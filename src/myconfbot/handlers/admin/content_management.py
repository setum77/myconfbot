import logging
import os
import tempfile
from telebot import types
from telebot.types import Message, CallbackQuery

from .admin_base import BaseAdminHandler
from src.myconfbot.utils.content_manager import ContentManager


class ContentManagementHandler(BaseAdminHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
    
    def __init__(self, bot, config, db_manager):
        super().__init__(bot, config, db_manager)
        self.logger = logging.getLogger(__name__)
        self.content_manager = ContentManager()
    
    def register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
        self._register_content_edit_handlers()
        self._register_content_preview_handlers()
        self._register_download_handlers()
        self._register_content_state_handlers()
    
    def _register_content_edit_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('content_edit_'))
        def edit_content_callback(callback: CallbackQuery):
            self._edit_content_callback(callback)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('keep_original_'))
        def keep_original_callback(callback: CallbackQuery):
            self._keep_original_callback(callback)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('cancel_edit_'))
        def cancel_editing_callback(callback: CallbackQuery):
            self._cancel_editing_callback(callback)
    
    def _register_content_preview_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('content_preview_'))
        def preview_content_callback(callback: CallbackQuery):
            self._preview_content_callback(callback)
    
    def _register_download_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('download_'))
        def download_file_callback(callback: CallbackQuery):
            self._download_file_callback(callback)
    
    def _register_content_state_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        @self.bot.message_handler(
            func=lambda message: self.states_manager.get_management_state(message.from_user.id) is not None and
            self.states_manager.get_management_state(message.from_user.id).get('state') == 'editing_content'
        )
        def handle_content_edit(message: Message):
            self._handle_content_edit(message)
    
    def manage_content(self, message: Message):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
        if not self._check_admin_access(message=message):
            return
        
        keyboard = types.InlineKeyboardMarkup()
        
        files = self.content_manager.get_file_list()
        for filename in files:
            keyboard.add(
                types.InlineKeyboardButton(f"‚úèÔ∏è {filename}", callback_data=f"content_edit_{filename}"),
                types.InlineKeyboardButton(f"üëÄ {filename}", callback_data=f"content_preview_{filename}")
            )
        
        help_text = """
üé® <b>–†–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞</b>

–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:</b>
‚úÖ <b>–ñ–∏—Ä–Ω—ã–π</b> - –æ–±–µ—Ä–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–≤–æ–π–Ω—ã–º–∏ –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏ **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**
‚úÖ <i>–ö—É—Ä—Å–∏–≤</i> - –æ–±–µ—Ä–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è _–∫—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç_
‚úÖ <code>–ö–æ–¥</code> - –æ–±–µ—Ä–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ `–∫–æ–¥`, —Å–∏–º–≤–æ–ª –Ω–∞ –∫–ª–∞–≤–∏—à–µ "—ë" –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ
‚úÖ ‚ú¶ –°–ø–∏—Å–∫–∏ –ø—Ä–æ—â–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Å —ç–º–æ–¥–∑–∏. –ù–∞–ø—Ä–∏–º–µ—Ä - ‚ñ´Ô∏è, –∏–ª–∏ ‚ú¶ 
‚úÖ –≠–º–æ–¥–∑–∏ üéÇ üìû üíº - –≤—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–∞–∫ –µ—Å—Ç—å. –ò—Å–∫–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä <a href="https://getemoji.com/">—Ç—É—Ç</a>. –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π, —â–µ–ª–∫–∞–µ–º –ø–æ –Ω–µ–º—É, –æ–Ω —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. –í –Ω—É–∂–Ω–æ –º–µ—Å—Ç–µ –≤—Å—Ç–∞–≤–ª—è–µ–º <code>Ctrl + V</code>

<b>–í–∞–∂–Ω–æ:</b> –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª—ã _ * [ ] ( ) ~ ` > # + - = | { } . !, —ç–∫—Ä–∞–Ω–∏—Ä—É–π—Ç–µ –∏—Ö –æ–±—Ä–∞—Ç–Ω—ã–º —Å–ª—ç—à–µ–º \.
<b>–ù–∞–ø—Ä–∏–º–µ—Ä</b>, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å 5 * 5 = 25, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 5 \* 5 \= 25
–ò –¥–∞–∂–µ —Ç–æ—á–∫—É . –∏ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ !, –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å \. –∏ \!
"""

        self.bot.send_message(
            message.chat.id,
            help_text,
            parse_mode='HTML',  # –ú–µ–Ω—è–µ–º –Ω–∞ HTML
            reply_markup=keyboard
        )
    
    def _edit_content_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        if not self._check_admin_access(callback=callback):
            return
        
        try:
            filename = callback.data.replace('content_edit_', '')
            current_content = self.content_manager.get_content(filename)
            
            if current_content is None:
                return self.bot.answer_callback_query(callback.id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(
                types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data=f"cancel_edit_{filename}"),
                types.InlineKeyboardButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π", callback_data=f"keep_original_{filename}")
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
            self.states_manager.set_management_state(callback.from_user.id, {
                'state': 'editing_content',
                'filename': filename,
                'original_content': current_content,
                'chat_id': callback.message.chat.id,
                'message_id': callback.message.message_id
            })
            
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
            self.bot.edit_message_text(
                f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {filename}\n\n"
                f"–¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:\n\n"
                f"{current_content}\n\n"
                f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                callback.message.chat.id,
                callback.message.message_id,
                reply_markup=keyboard
            )
            
            self.bot.answer_callback_query(callback.id)
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –≤ edit_content_callback: {e}", exc_info=True)
            self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞")
    
    def _keep_original_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
        if not self._check_admin_access(callback=callback):
            return
        
        try:
            filename = callback.data.replace('keep_original_', '')
            user_id = callback.from_user.id
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            user_state = self.states_manager.get_management_state(user_id)
            original_content = user_state.get('original_content')
            
            if original_content:
                # "–°–æ—Ö—Ä–∞–Ω—è–µ–º" –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç (—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º)
                self.states_manager.clear_management_state(user_id)
                
                self.bot.edit_message_text(
                    f"‚úÖ –§–∞–π–ª '{filename}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.",
                    callback.message.chat.id,
                    callback.message.message_id
                )
                self.bot.answer_callback_query(callback.id, "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            else:
                self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç")
                
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –≤ keep_original_callback: {e}", exc_info=True)
            self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
    
    def _cancel_editing_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        user_id = callback.from_user.id
        filename = callback.data.replace('cancel_edit_', '')
        
        self.states_manager.clear_management_state(user_id)
        
        self.bot.edit_message_text(
            f"‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ '{filename}' –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            callback.message.chat.id,
            callback.message.message_id
        )
        self.bot.answer_callback_query(callback.id, "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    
    def _preview_content_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        if not self._check_admin_access(callback=callback):
            return
        
        try:
            filename = callback.data.replace('content_preview_', '')
            content = self.content_manager.get_content(filename)
            
            if content is None:
                return self.bot.answer_callback_query(callback.id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(
                types.InlineKeyboardButton("üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª", callback_data=f"download_{filename}")
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            preview_text = f"üëÄ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä {filename}:\n\n{content}"
            
            # –û–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram)
            if len(preview_text) > 4000:
                preview_text = preview_text[:4000] + "..."
            
            self.bot.send_message(callback.message.chat.id, preview_text, reply_markup=keyboard)
            self.bot.answer_callback_query(callback.id)
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –≤ preview_content_callback: {e}", exc_info=True)
            self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ")
    
    def _handle_content_edit(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        user_id = message.from_user.id
        user_state = self.states_manager.get_management_state(user_id)
        filename = user_state.get('filename')
        chat_id = user_state.get('chat_id')
        message_id = user_state.get('message_id')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã
        if message.text.lower() in ['–æ—Ç–º–µ–Ω–∞', 'cancel', '–Ω–∞–∑–∞–¥', '‚ùå', '–æ—Ç–º–µ–Ω–∏—Ç—å']:
            self.states_manager.clear_management_state(user_id)
            self.bot.send_message(message.chat.id, "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if message.text.lower() in ['–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π', '–æ—Å—Ç–∞–≤–∏—Ç—å', '—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å', 'üíæ']:
            self.states_manager.clear_management_state(user_id)
            self.bot.send_message(message.chat.id, f"‚úÖ –§–∞–π–ª '{filename}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
            return

        if not filename:
            self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        try:
            if self.content_manager.update_content(filename, message.text):
                # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                self.states_manager.clear_management_state(user_id)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                self.bot.send_message(message.chat.id, f"‚úÖ –§–∞–π–ª `{filename}` —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", parse_mode='Markdown')
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
                self.manage_content(message)
            else:
                self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞")
                
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}", exc_info=True)
            self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞")
    
    def _download_file_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞"""
        if not self._check_admin_access(callback=callback):
            return
        
        try:
            filename = callback.data.replace('download_', '')
            content = self.content_manager.get_content(filename)
            
            if content is None:
                return self.bot.answer_callback_query(callback.id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            with tempfile.NamedTemporaryFile(mode='w', suffix='.md', delete=False, encoding='utf-8') as temp_file:
                temp_file.write(content)
                temp_file_path = temp_file.name
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            try:
                with open(temp_file_path, 'rb') as file:
                    self.bot.send_document(
                        callback.message.chat.id, 
                        file, 
                        caption=f"üìÑ –§–∞–π–ª: {filename}"
                    )
                self.bot.answer_callback_query(callback.id, "‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            except Exception as e:
                self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
                self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ")
            finally:
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                try:
                    os.unlink(temp_file_path)
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")
                
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}", exc_info=True)
            self.bot.answer_callback_query(callback.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏")